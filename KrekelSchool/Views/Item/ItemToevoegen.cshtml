@model KrekelSchool.Models.ItemViewModel

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm())
{
    <h2 class="modalFormTitle">@ViewBag.Title</h2>
    <hr />
    @Html.ValidationSummary(true, "Pas de fouten aan!", new { @class = "text-danger" })
    <div class="form-horizontal modalForm">

        <div class="form-group">
            @Html.LabelFor(model => model.Naam, htmlAttributes: new { @class = "control-label col-md-2 label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Naam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Naam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Leeftijd, htmlAttributes: new { @class = "control-label col-md-2 label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Leeftijd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Leeftijd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Beschikbaar, htmlAttributes: new { @class = "control-label col-md-2 label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Beschikbaar, new { htmlAttributes = new { @class = "form-control checkBeschikbaar" } })
                @Html.ValidationMessageFor(model => model.Beschikbaar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotaalBeschikbaar, htmlAttributes: new { @class = "control-label col-md-2 label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotaalBeschikbaar, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotaalBeschikbaar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Beschrijving, htmlAttributes: new { @class = "control-label col-md-2 label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Beschrijving, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Beschrijving, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (ViewBag.id == "Boeken")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Isbn, htmlAttributes: new { @class = "control-label col-md-2 label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Isbn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Isbn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Auteur, htmlAttributes: new { @class = "control-label col-md-2 label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Auteur, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Auteur, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Uitgever, htmlAttributes: new { @class = "control-label col-md-2 label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Uitgever, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Uitgever, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        else if (ViewBag.id == "Dvds" || ViewBag.id == "Cds")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2 label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=" " @*formaction="@Url.Action("ItemScreen" + "/" + ViewBag.id)"*@ class="btn btn-default addOk" />
            </div>
        </div>
    </div>
}


